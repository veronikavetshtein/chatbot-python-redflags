# --- БАЗОВЫЕ ВОПРОСЫ И ОТВЕТЫ ---

# Основные вопросы, с которых начинается сценарий общения
question_1 = 'Привет.'
question_2 = 'Чем занимаешься?'
question_3 = 'Где встретимся?'

# Варианты ответов на начальные вопросы
first_questions = {question_1: ['1: Привет!', '2: О, привет! Я как раз думал, когда ты мне напишешь.', '3: Привет, куколка! Чем порадуешь?'], 
             question_2: ['1: Я как раз пишу новый трек, может, хочешь демку послушать?', '2: Да вот, катаюсь по делам, темки мучу. Давай встретимся, покатаю тебя, заодно поболтаем!', '3: Я сейчас на совещании, но уже думаю, как провести с тобой вечер.'], 
             question_3: ['1: Я знаю одно атмосферное место, тебе точно понравится!', '2: Может, сходим в парк или на набережную? Прогулки всегда хорошая идея.', '3: Netflix & Chill у меня или у тебя?']}

# Определяем, какие ответы считаются "ред-флагами" - тревожными сигналами в поведении собеседника
red_flags = {question_1: ['2', '3'], question_2: ['1', '2'], question_3: ['2', '3']}



# --- ДОПОЛНИТЕЛЬНЫЕ ВОПРОСЫ ПО СЦЕНАРИЮ 1 (ресторан) ---
# Поясняющие вопросы по сценарию встречи в ресторане
question_3_1_1 = 'Слушай, мне так далеко ехать...'
question_3_1_2 = 'Будем ли мы одни?'
question_3_1_3 = 'Что мне лучше надеть?'
question_3_1_4 = 'А ты платишь?'
question_3_1_5 = 'Что будем делать после ужина?'

# Варианты ответов
questions_3_v1 = {question_3_1_1: ['1: Не переживай, за тобой заеду.', '2: Ну, зато сможешь прогуляться перед ужином.', '3: Если захочешь, найдёшь способ приехать.'], 
                  question_3_1_2: ['1: Конечно, я забронировал столик на двоих.', '2: К нам могут присоединиться мои друзья, они классные.', '3: А ты боишься?'], 
                  question_3_1_3: ['1: Надевай то, в чём тебе будет комфортно. Главное, чтобы ты чувствовала себя собой.', '2: Что-нибудь элегантное, всё-таки ресторан.', '3: Что-то покороче, хочу насладиться видом.'], 
                  question_3_1_4: ['1: Конечно, что за вопросы?', '2: 50/50, ты же за равенство полов.', '3: Ну, посмотрим, как себя вести будешь.'], 
                  question_3_1_5: ['1: Тут недалеко есть отличная джелатерия. Что насчет десерта?', '2: Посмотрим по настроению, не будем загадывать.', '3: Ты ко мне или мне к тебе?']}

# Ред-флаги для сценария ресторана
red_flags_3_v1 = {question_3_1_1: ['2', '3'], question_3_1_2: ['2', '3'], question_3_1_3: ['2', '3'], question_3_1_4: ['2', '3'], question_3_1_5: ['2', '3']}



# --- ДОПОЛНИТЕЛЬНЫЕ ВОПРОСЫ ПО СЦЕНАРИЮ 2 (прогулка) ---
# Аналогично оформлены дополнительные вопросы, варианты ответов и ред-флаги
question_3_2_1 = 'Мне так далеко ехать...'
question_3_2_2 = 'Я буду после учебы, наверное, буду голодная...'
question_3_2_3 = 'А к нам кто-нибудь присоединится или мы будем одни?'
question_3_2_4 = 'Что мне лучше надеть?'
question_3_2_5 = 'А что если станет холодно?'
question_3_2_6 = 'Что будем делать после прогулки?'

questions_3_v2 = {question_3_2_1: ['1: Давай найдём парк ближе к тебе, мне не сложно.', '2: Ну, зато свежий воздух и природа!', '3: Ты просто ищешь отговорки.'], 
                  question_3_2_2: ['1: Тогда возьмем кофе и что-то вкусное.', '2: Рядом с парком делают такую шаверму, закачаешься…', '3: Думаю, прогулка со мной важнее еды.'], 
                  question_3_2_3: ['1: Только ты и я.', '2: Пацаны к нам потом присоединятся.', '3: А тебя это смущает? Или ты боишься меня?'], 
                  question_3_2_4: ['1: Что-то удобное, главное, чтобы ты не замёрзла.', '2: Что-нибудь уютное, но не забывай, что ты идешь на свидание.', '3: Ну, что-то, чтобы ты выглядела эффектно.'], 
                  question_3_2_5: ['1: Возьму для тебя плед или дам свою куртку.', '2: Ну, ты же знала, что мы идем гулять, так что это твои проблемы.', '3: Обниму тебя, не замерзнешь.'], 
                  question_3_2_6: ['1: Если не устанем, можем зайти в кофейню.', '2: Ну, не знаю, как закончится, но варианты есть.', '3: Если захочешь, можем продолжить у меня.']}

red_flags_3_v2 = {question_3_2_1: ['2', '3'], question_3_2_2: ['2', '3'], question_3_2_3: ['2', '3'], question_3_2_4: ['2', '3'], question_3_2_5: ['2', '3'], question_3_2_6: ['2', '3']}



# --- ДОПОЛНИТЕЛЬНЫЕ ВОПРОСЫ ПО СЦЕНАРИЮ 3 (Netflix & Chill) ---
question_3_3_1 = 'Мне так далеко ехать...'
question_3_3_2 = 'Я буду после учебы, наверное, буду голодная...'
question_3_3_3 = 'Будем ли мы одни?'
question_3_3_4 = 'Что мне лучше надеть?'
question_3_3_5 = 'А ты точно хочешь только фильм посмотреть?'
question_3_3_6 = 'Что будем делать после фильма?'

questions_3_v3 = {question_3_3_1: ['1: Не переживай, за тобой заеду.', '2: Ну, это же стоит того, обещаю, будет уютно.', '3: Это же Netflix & Chill, оно того стоит.'], 
                  question_3_3_2: ['1: Закажем пиццу или приготовлю что-нибудь.', '2: Ну, у меня в холодильнике что-нибудь точно найдётся.', '3: Мне кажется, мы будем заняты не едой.'], 
                  question_3_3_3: ['1: Конечно, уютный вечер только вдвоем.', '2: Может, к нам пацаны заглянут. Какие-то проблемы?', '3: Ты боишься остаться со мной наедине?'], 
                  question_3_3_4: ['1: Что-то удобное, ведь ты должна чувствовать себя комфортно.', '2: Одежда не обязательна.', '3: Что-нибудь коротенькое, чтобы красиво выглядело.'], 
                  question_3_3_5: ['1: Да, просто хочу провести с тобой вечер.', '2: Фильм — это просто предлог.', '3: А разве в Netflix & Chill главное – фильм?'], 
                  question_3_3_6: ['1: Если не устанем, можем посмотреть ещё что-то.', '2: Посмотрим по настроению, может, захочется продолжения вечера.', '3: Ты останешься у меня или я тебя провожу?']}
red_flags_3_v3 = {question_3_3_1: ['2', '3'], question_3_3_2: ['2', '3'], question_3_3_3: ['2', '3'], question_3_3_4: ['2', '3'], question_3_3_5: ['2', '3'], question_3_3_6: ['2', '3']}


# --- НАЧАЛО ПРОГРАММЫ ---
print('Привет! Этот тест поможет тебе распознать потенциальные ред-флаги в общении. Просто выбери тот вариант ответа, который тебе кажется наиболее подходящим.')
print('Поехали!\n')


# Функция, которая выводит все варианты ответов на вопрос
def print_answers(answers):
    for answer in answers:
        print(' ' + answer)


# Функция для задавания вопросов и подсчета количества "тревожных" ответов
def ask_questions(first_questions, red_flags, user_answers):
    count = 0 # счетчик ред-флагов
    for question in first_questions:
        answers = first_questions[question]
        print(question)
        print_answers(answers)
        answer = input()
        # Проверка, ввёл ли пользователь корректный номер варианта
        while not answer.isdigit() or int(answer) < 1 or int(answer) > len(answers):
            print('Задайте один из вариантов')
            answer = input()
        if answer in red_flags[question]:
            count += 1 # Если выбранный ответ входит в список тревожных, увеличиваем счётчик
        user_answers[question] = answers[int(answer) - 1] # Индексация с 0, поэтому уменьшаем на 1
    return count, answer


# Основная логика - начало с первого блока вопросов
points = 0 # Переменная для хранения набранных очков ред-флагов
last_answer = '' # Переменная для хранения последнего ответа пользователя
total_points = 0 # Общие очки, которые будут накапливаться по ходу теста
user_answers = {} # новый словарь для хранения ответов

# Получаем результаты первого блока
points, last_answer = ask_questions(first_questions, red_flags, user_answers)
total_points += points # Добавляем количество ред-флагов за первый блок в общие очки


# Второй блок вопросов выбирается в зависимости от последнего ответа
if last_answer == '1':
    points, answer = ask_questions(questions_3_v1, red_flags_3_v1, user_answers)
    total_points += points    
            
elif last_answer == '2':
    points, last_answer = ask_questions(questions_3_v2, red_flags_3_v2, user_answers)
    total_points += points

else:
    points, last_answer = ask_questions(questions_3_v3, red_flags_3_v3, user_answers)
    total_points += points


# Оцениваем общее количество ред-флагов и выводим соответствующее сообщение-предупреждение
print(f'\nУ тебя {total_points} потенциальных ред-флага(ов).')

if total_points <= 2:
    print('🟢 Всё окей! Кажется, он вполне адекватный и уважительный в общении.')
elif 3 <= total_points <= 5:
    print('🟡 Есть парочка настораживающих моментов. Присмотрись внимательнее.')
else:
    print('🔴 Много тревожных сигналов. Будь осторожна и подумай дважды.')

# Выводим ответы пользователя
print(f'\n\nВаши ответы:')
for key in user_answers:
    print(key)
    print(f' -> {user_answers[key]}\n')

# Записываем ответы в файл
with open('ответы.txt', 'w', encoding='utf-8') as outfile:
    for key in user_answers:
        print(key, file=outfile)
        print(f' -> {user_answers[key]}\n', file=outfile)